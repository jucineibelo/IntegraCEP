unit view.enderecos;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Buttons, Vcl.ComCtrls,
  Vcl.ExtCtrls, Dm, Vcl.Grids, Vcl.DBGrids, Vcl.Mask, Vcl.DBCtrls, DB,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet, FireDAC.Comp.Client,
  FireDAC.UI.Intf, FireDAC.VCLUI.Wait, FireDAC.Comp.UI, REST.Client;

type
  TfrmEndereco = class(TForm)
    pnlFundo: TPanel;
    pnlBotoesButton: TPanel;
    btnNovo: TSpeedButton;
    btnEditar: TSpeedButton;
    btnCancelar: TSpeedButton;
    btnSalvar: TSpeedButton;
    btnExcluir: TSpeedButton;
    PageControl1: TPageControl;
    TabSheet1: TTabSheet;
    Panel2: TPanel;
    lblCadPessoa: TLabel;
    lblCod: TLabel;
    lblPessoa: TLabel;
    lblCep: TLabel;
    edtCep: TDBEdit;
    DBTextCod: TDBText;
    lookupPessoa: TDBLookupComboBox;
    TabSheet3: TTabSheet;
    Panel3: TPanel;
    lblNome: TLabel;
    lblUF: TLabel;
    edtUF: TDBEdit;
    lblCidade: TLabel;
    edtCidade: TDBEdit;
    lblBairro: TLabel;
    edtBairro: TDBEdit;
    lblLogradouro: TLabel;
    edtLogradouro: TDBEdit;
    lblComplemento: TLabel;
    edtComplemento: TDBEdit;
    lookupNomeIntegracao: TDBLookupComboBox;
    edtCepIntegracao: TDBEdit;
    btnPesquisaCep: TBitBtn;
    DBGrid1: TDBGrid;
    DBGrid2: TDBGrid;
    btnNovo2: TBitBtn;
    btnEditar2: TBitBtn;
    btnCancelar2: TBitBtn;
    btnSalvar2: TBitBtn;
    btnExcluir2: TBitBtn;
    DBText1: TDBText;
    procedure btnNovoClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure btnEditarClick(Sender: TObject);
    procedure btnCancelarClick(Sender: TObject);
    procedure btnSalvarClick(Sender: TObject);
    procedure btnExcluirClick(Sender: TObject);
    procedure PageControl1Change(Sender: TObject);
    procedure btnPesquisaCepClick(Sender: TObject);
    procedure btnSalvar2Click(Sender: TObject);
    procedure edtCepKeyPress(Sender: TObject; var Key: Char);
    procedure btnNovo2Click(Sender: TObject);
    procedure btnEditar2Click(Sender: TObject);
    procedure btnCancelar2Click(Sender: TObject);
    procedure btnExcluir2Click(Sender: TObject);
    procedure TabSheet3Show(Sender: TObject);
  private

    procedure desativarBotoes;
    procedure desativarBotoesAll;
    procedure ativarBotoes;

  public
    { Public declarations }
  end;

var
  frmEndereco: TfrmEndereco;

implementation

uses
  Dm.integra;

{$R *.dfm}
{ TfrmEndereco }

procedure TfrmEndereco.ativarBotoes;

var
  i: integer;
begin
  for i := 0 to ComponentCount - 1 do
  begin
    if Components[i] is TSpeedButton then
      TSpeedButton(Components[i]).Visible := True;
  end;
end;

procedure TfrmEndereco.btnSalvar2Click(Sender: TObject);
begin // Salvar tabela integração
  try
    DmCon.QryIntegracao.Post;
    DmCon.QryIntegracao.Refresh;
    MessageDlg('Registro salvo com sucesso!', mtInformation, [mbOK], 0);
    DmCon.QryIntegracao.Append;
  except
    on E: EDatabaseError do
    begin
      Application.Title := 'Atenção!';
      ShowMessage('Algum campo obrigatório não foi preenchido.' + #13 +
        'Tente Novamente!');
    end;
  end;
end;

procedure TfrmEndereco.btnEditar2Click(Sender: TObject);
begin
  if DmCon.QryIntegracao.State = dsBrowse then
    DmCon.QryEndereco.Edit;
end;

procedure TfrmEndereco.btnCancelar2Click(Sender: TObject);
begin
  if DmCon.QryIntegracao.State in dsEditModes then
    DmCon.QryIntegracao.Cancel;
end;

procedure TfrmEndereco.btnExcluir2Click(Sender: TObject);
var
  aviso: integer;
begin
  Application.Title := 'Atenção!';
  aviso := Application.MessageBox('Deseja mesmo excluir o registro? ',
    'Atenção', MB_YESNO + MB_DEFBUTTON2 + MB_ICONQUESTION);
  if aviso <> IDNO then
    DmCon.QryIntegracao.Delete;
end;

procedure TfrmEndereco.btnCancelarClick(Sender: TObject);
begin
  ativarBotoes;
  if DmCon.QryEndereco.State in dsEditModes then
    DmCon.QryEndereco.Cancel;
  btnSalvar.Visible := False;
end;

procedure TfrmEndereco.btnEditarClick(Sender: TObject);
begin
  desativarBotoes;
  if DmCon.QryEndereco.State = dsBrowse then
    PageControl1.TabIndex := 0;
  DmCon.QryEndereco.Edit;
  edtCep.SetFocus;

end;

procedure TfrmEndereco.btnExcluirClick(Sender: TObject);
var
  aviso: integer;
begin
  Application.Title := 'Atenção!';
  aviso := Application.MessageBox('Deseja mesmo excluir o registro? ',
    'Atenção', MB_YESNO + MB_DEFBUTTON2 + MB_ICONQUESTION);
  if aviso <> IDNO then
    DmCon.QryEndereco.Delete;
end;

procedure TfrmEndereco.btnNovoClick(Sender: TObject);
var
  regist: integer;
begin
  desativarBotoes;
  PageControl1.TabIndex := 0;
  DmCon.QryEndereco.Last;
  regist := DmCon.QryEnderecoIDENDERECO.AsInteger + 1;
  DmCon.QryEndereco.Append;
  DmCon.QryEnderecoIDENDERECO.AsInteger := regist;
  edtCep.SetFocus;
end;

procedure TfrmEndereco.btnPesquisaCepClick(Sender: TObject);
begin // Pesquisa na API
  if Length(edtCepIntegracao.Text) <> 8 then
  begin
    ShowMessage('CEP Inválido, corrija e tente novamente!');
    Close;
  end;

  if Length(edtCepIntegracao.Text) = 8 then
    try
      DmIntegra.RESTClient1.BaseURL := 'http://viacep.com.br/ws/' +
        edtCepIntegracao.Text + '/json/';
      DmIntegra.RESTRequest1.Execute;
      // ShowMessage(DmIntegra.RESTResponse1.Content);   <- teste para ver se retornava
      edtCidade.Text := DmIntegra.FDMemTable1.FieldByName('localidade').AsString;
      edtBairro.Text := DmIntegra.FDMemTable1.FieldByName('bairro').AsString;
      edtLogradouro.Text := DmIntegra.FDMemTable1.FieldByName('logradouro').AsString;
      edtComplemento.Text := DmIntegra.FDMemTable1.FieldByName('complemento').AsString;
      edtUF.Text := DmIntegra.FDMemTable1.FieldByName('uf').AsString;
    except
      on E: EDatabaseError do
      begin
        Application.Title := 'Atenção!';
        ShowMessage('CEP não encontrado!');
      end;
    end;
end;

procedure TfrmEndereco.btnSalvarClick(Sender: TObject);
begin
  try
    DmCon.QryEndereco.Post;
    DmCon.QryEndereco.Refresh;
    MessageDlg('Registro salvo com sucesso!', mtInformation, [mbOK], 0);
    PageControl1.TabIndex := 1;
    ativarBotoes;
    btnSalvar.Visible := False;

  except
    on E: EDatabaseError do
    begin
      Application.Title := 'Atenção!';
      ShowMessage('Algum campo obrigatório não foi preenchido.' + #13 + 'Tente Novamente!');
    end;
  end;
  desativarBotoesAll;

end;

procedure TfrmEndereco.desativarBotoes;
begin
  btnNovo.Visible := False;
  btnEditar.Visible := False;
  btnExcluir.Visible := False;
  btnCancelar.Visible := True;
  btnSalvar.Visible := True;

end;

procedure TfrmEndereco.desativarBotoesAll;
var
  i: integer;
begin
  for i := 0 to ComponentCount - 1 do
  begin
    if Components[i] is TSpeedButton then
      TSpeedButton(Components[i]).Visible := False;
  end;
end;

procedure TfrmEndereco.edtCepKeyPress(Sender: TObject; var Key: Char);
begin
  if not(Key in ['0' .. '9', #8, #13, #27]) then
    Key := #0; //
end;

procedure TfrmEndereco.FormCreate(Sender: TObject);
begin
  if not DmCon.QryEndereco.Active then
    DmCon.QryEndereco.Active := True;

  if not DmCon.QryPessoas.Active then
    DmCon.QryPessoas.Active := True;

  PageControl1.TabIndex := 0;
  btnSalvar.Visible := False;
end;

procedure TfrmEndereco.btnNovo2Click(Sender: TObject);
begin
  DmCon.QryIntegracao.Last;
  DmCon.QryIntegracao.Append;
end;

procedure TfrmEndereco.PageControl1Change(Sender: TObject);
var
  i: integer;
begin
  if PageControl1.TabIndex = 0 then
    ativarBotoes;
  if PageControl1.TabIndex = 1 then
    desativarBotoesAll;
  btnSalvar.Visible := False;
end;

procedure TfrmEndereco.TabSheet3Show(Sender: TObject);
begin
  if not DmCon.QryIntegracao.Active then
    DmCon.QryIntegracao.Active := True;
end;

end.
